@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>Jasmine Calculator</title>
    <link href="../../Content/jasmine.css" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-1.6.4.min.js")" type="text/javascript"></script>
	<script src="@Url.Content("~/Scripts/jquery.signalR.js")" type="text/javascript"></script>
    <script src="../../Scripts/jasmine.js" type="text/javascript"></script>
    <script src="../../Scripts/jasmine-html.js" type="text/javascript"></script>
    <script src="@Url.Content("~/signalr/hubs")" type="text/javascript"></script>
    @if (false)
    {
        <script src="../../Scripts/jquery-1.6.4-vsdoc.js" type="text/javascript"></script>
    }
</head>
<body>
    
    <script type="text/javascript">

        $(function()
        {
            var calc = $.connection.calculatorHub;

            var fixture = new calculatorTestFixture(calc);

            calc.showSum = function(sum)
            {
                fixture.onAdd(sum);
            };

            $.connection.hub.start(function()
            {
                fixture.test();
            });
        });

        var calculatorTestFixture = function(c)
        {
            var calculator = c;

            var addCallback = false;

            init = function()
            {
                describe('addition',function()
                {
                    it('gives the correct sum of 2 numbers',function()
                    {
                        addCallback = jasmine.createSpy();
                        calculator.add(2,2);

                        waitsFor(function()
                        {
                            return addCallback.callCount > 0;
                        });

                        runs(function()
                        {
                            expect(addCallback).toHaveBeenCalledWith(4);
                        });
                    });
                });
            };

            this.onAdd = function(sum)
            {
                addCallback(sum);
            };

            this.test = function()
            {
                init();

                var jasmineEnv = jasmine.getEnv();
                jasmineEnv.updateInterval = 1000;
                jasmineEnv.addReporter(new jasmine.TrivialReporter());
                jasmineEnv.execute();
            };
        };

    </script>

</body>
</html>
